version: '3.8'

services:
  db:
    image: postgres:15-alpine
    container_name: postgres-db
    volumes:
      - postgres_data_dev:/var/lib/postgresql/data/
    environment:
      - POSTGRES_USER=vacation_user
      - POSTGRES_PASSWORD=vacation_pass
      - POSTGRES_DB=vacation_db
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U vacation_user -d vacation_db"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 5s
    restart: unless-stopped
    networks:
      - vacation_network_dev
    ports:
      - "5432:5432"

  redis:
    image: redis:7-alpine
    container_name: redis-cache
    volumes:
      - redis_data_dev:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5
    restart: unless-stopped
    networks:
      - vacation_network_dev
    ports:
      - "6379:6379"

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    container_name: api-backend
    command: ./start.sh
    volumes:
      - ./backend:/app
      - backend_static_dev:/app/static
    environment:
      - DATABASE_URL=postgresql+asyncpg://vacation_user:vacation_pass@db:5432/vacation_db
      - REDIS_URL=redis://redis:6379/0
      - SECRET_KEY=${SECRET_KEY:-dev_secret_key}
      - ENVIRONMENT=${ENVIRONMENT:-development}
      - LOG_LEVEL=${LOG_LEVEL:-debug}
      - POSTGRES_USER=vacation_user
      - POSTGRES_PASSWORD=vacation_pass
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
      - POSTGRES_DB=vacation_db
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - vacation_network_dev
    ports:
      - "${API_PORT:-8000}:8000"

  celery_worker:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    container_name: celery-worker
    command: celery -A app.worker.celery_app worker --loglevel=${LOG_LEVEL:-info}
    volumes:
      - ./backend:/app
    environment:
      - DATABASE_URL=postgresql+asyncpg://vacation_user:vacation_pass@db:5432/vacation_db
      - REDIS_URL=redis://redis:6379/0
      - SECRET_KEY=${SECRET_KEY:-dev_secret_key}
      - ENVIRONMENT=${ENVIRONMENT:-development}
      - LOG_LEVEL=${LOG_LEVEL:-debug}
      - POSTGRES_USER=vacation_user
      - POSTGRES_PASSWORD=vacation_pass
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
      - POSTGRES_DB=vacation_db
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - vacation_network_dev

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    container_name: frontend-web
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      - REACT_APP_API_BASE_URL=http://localhost:8000/api/v1
      - NODE_ENV=development
    depends_on:
      - backend
    restart: unless-stopped
    networks:
      - vacation_network_dev
    ports:
      - "${WEB_PORT:-3000}:3000"

volumes:
  postgres_data_dev:
  redis_data_dev:
  backend_static_dev:

networks:
  vacation_network_dev:
    driver: bridge